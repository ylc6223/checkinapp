{"version":3,"sources":["webpack:///C:/sourcecode/checkinapp/components/zsy-calendar/zsy-calendar.vue?504a","webpack:///C:/sourcecode/checkinapp/components/zsy-calendar/zsy-calendar.vue?0bc9","webpack:///C:/sourcecode/checkinapp/components/zsy-calendar/zsy-calendar.vue?ccd4","webpack:///C:/sourcecode/checkinapp/components/zsy-calendar/zsy-calendar.vue?2c53","uni-app:///components/zsy-calendar/zsy-calendar.vue","webpack:///C:/sourcecode/checkinapp/components/zsy-calendar/zsy-calendar.vue?92e5","webpack:///C:/sourcecode/checkinapp/components/zsy-calendar/zsy-calendar.vue?dd02"],"names":["name","components","DateBox","props","duration","type","default","cellHeight","dateActiveColor","sundayIndex","mode","changeSetDefault","defaultSelectedDate","data","today","selectedDate","week","current","shrinkCurrent","calendarSwiperDates","calendarSwiperShrinkDates","dateActive","swiperByClick","shrinkSwiperByClick","swiperMode","dateCache","emitTimer","dateClick","computed","getAssignDateInfo","showBackToTodayBtn","swiperHeight","watch","deep","handler","clearTimeout","created","methods","init","initWeek","normalWeek","initCalendarSwiperDates","cb","generateCalendar","calendarDate","year","month","date","isSelected","isToday","theDateIsToday","item","initCalendarShrinkSwiperDates","swiperChangeType","line","currentNum","generateShrinkCalendar","swiperChange","setTimeout","shrinkSwiperChange","getPrevOrNextDate","getPrevOrNextStartDate","goToDate","chooseDate","chooseShrinkDate","emitDate"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AACzH;AACgE;AACL;AACa;;;AAGxE;AACmN;AACnN,gBAAgB,6NAAU;AAC1B,EAAE,kFAAM;AACR,EAAE,uFAAM;AACR,EAAE,gGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,2FAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAy1B,CAAgB,s2BAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;ACwE72B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;MAAA;MACAC;MACAC;IACA;IACAC;MAAA;MACAF;MACAC;IACA;IACAE;MAAA;MACAH;MACAC;IACA;IACAG;MAAA;MACAJ;MACAC;IACA;IACAI;MAAA;MACAL;MACAC;IACA;IACAK;MAAA;MACAN;MACAC;IACA;IACAM;MAAA;MACAP;MACAC;IACA;EACA;EACAO;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACA;AACA;AACA;IACAC;MAAA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MAAA;MACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACAf;MACA;QAAA;QACA;QACA;MACA;MACA;QAAA;QACA;QACA;MACA;MACA;QAAA;QACA;MACA;QAAA;QACA;MACA;IACA;IACA;IACAC;MACA;QAAA;QACA;QACA;MACA;MACA;QAAA;QACA;QACA;MACA;MACA;QAAA;QACA;MACA;QAAA;QACA;MACA;IACA;IACA;IACAM;MACA;MACA;QACA;MACA;IACA;IACAT;MACAkB;MACAC;QAAA;QACA;UAAA;UACA;UACA;QACA;UAAA;UACA;YACAC;UACA;UACA;YACA;UACA;QACA;MACA;IACA;EACA;EACAC;IACA;EACA;;EACAC;IACA;IACAC;MACA;QAAA;QACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACAC;MACAA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;MACA;MACA;MACAC;IACA;IACA;IACAC;MACA;MACA;MACA;QACAC;MACA;QAAA;QACA;QACA;QACA;QACA;QACA;QACA;UACA;UACA;UACA;YACA;cACAC;cACAC;cACAC;cACA1C;YACA;YACA;YACA;YACAuC;UACA;QACA;QACA;QACA;UACA;YACAC;YACAC;YACAC;YACAC;YACAC;YACA5C;UACA;UACA;UACA;UACAuC;QACA;QACA;QACA;QACA;UACA;YACA;cACAC;cACAC;cACAC;cACA1C;YACA;YACA;YACA;YACAuC;UACA;QACA;QACA;MACA;MACA;MACA;QACA;UACA;YACAA;YACA;YACA;UACA;QACA;MACA;MACA;IACA;IACA;IACAM;MACA;QACAC;MACA;IACA;IACA;IACAC;MACA;MACA;AACA;AACA;AACA;AACA;MACA;MACA,yBACAC,gIACAA,iGACA;QACA;QACA;QACAC;UAAA;QAAA;QACA;QACA;UACA;UACA;UACA;UACA;UACA;QACA;MACA;QAAA;QACA;QACA;QACA;QACA;QACAC;QACA;QACA;QACA;QACAD;UAAA;QAAA;QACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACA;IACAE;MACA;MACA;QACA;MACA;MACA;MACA;QACA;QACA;UACA;AACA;AACA;AACA;AACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;YAAA;YACA;UACA;YAAA;YACA;UACA;QACA;UACA;QACA;MACA;MACA;MACA;QACA;QACA;QACA;QACA;UACA;AACA;AACA;AACA;AACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;YAAA;YACA;UACA;YAAA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;MACAC;QAAA;QACA;UACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACAD;QAAA;QACA;MACA;IACA;IACA;IACAE;MACA;MACA;MACAd;MACA;MACA;MACA;MACA;MACA;IACA;IACA;IACAe;MACA;MACA;IACA;IACA;IACAC;MAAA;MAAA;MACA;QACA;QACA;UACAf;QACA;MACA;QACA;MACA;MACA;MACA;QACA;MACA;IACA;IACA;IACAgB;MACA;MACA;MACA;MACA;QACA;UAAA;UACA;QACA;UAAA;UACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACAhB;MACA;MACA;IACA;IACA;IACAiB;MACA;MACA;MACA;MACA;MACA;QACA;UAAA;UACA;QACA;UAAA;UACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAjB;MACA;IACA;IACA;IACAkB;MACA;QAAApB;QAAAC;QAAAC;MACA;QACAhC;QACA8B;QACAC;QACAC;MACA;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;ACjiBA;AAAA;AAAA;AAAA;AAA4sC,CAAgB,2rCAAG,EAAC,C;;;;;;;;;;;ACAhuC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"components/zsy-calendar/zsy-calendar.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./zsy-calendar.vue?vue&type=template&id=ff437138&\"\nvar renderjs\nimport script from \"./zsy-calendar.vue?vue&type=script&lang=js&\"\nexport * from \"./zsy-calendar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./zsy-calendar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/zsy-calendar/zsy-calendar.vue\"\nexport default component.exports","export * from \"-!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./zsy-calendar.vue?vue&type=template&id=ff437138&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var m0 = _vm.getAssignDateInfo(false, 0)\n  var m1 = _vm.getAssignDateInfo(true, 0)\n  var m2 = !(m0 === m1) ? _vm.getAssignDateInfo(false, 0) : null\n  var m3 = _vm.getAssignDateInfo(false, 1)\n  var m4 = _vm.swiperMode === \"open\" ? _vm.swiperHeight(\"open\") : null\n  var m5 = !(_vm.swiperMode === \"open\") ? _vm.swiperHeight(\"close\") : null\n  if (!_vm._isMounted) {\n    _vm.e0 = function (e) {\n      return (_vm.current = e.detail.current)\n    }\n    _vm.e1 = function (e) {\n      return (_vm.shrinkCurrent = e.detail.current)\n    }\n    _vm.e2 = function ($event) {\n      _vm.swiperMode = _vm.swiperMode === \"open\" ? \"close\" : \"open\"\n    }\n  }\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        m0: m0,\n        m1: m1,\n        m2: m2,\n        m3: m3,\n        m4: m4,\n        m5: m5,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./zsy-calendar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./zsy-calendar.vue?vue&type=script&lang=js&\"","<template>\r\n\t<!-- 日历滚动插件 -->\r\n\t<view class=\"zsy_calendar\">\r\n\t\t<!-- 日历顶部信息 -->\r\n\t\t<view class=\"calendar_info\">\r\n\t\t\t<text class=\"title\">每日记录</text>\r\n\t\t\t<text class=\"desc\">\r\n\t\t\t\t({{ getAssignDateInfo(false, 0) === getAssignDateInfo(true, 0) ? '' : getAssignDateInfo(false, 0) + '年' }}{{ getAssignDateInfo(false, 1) }}月)\r\n\t\t\t</text>\r\n\t\t\t<text v-show=\"showBackToTodayBtn\" class=\"backToToday\" :style=\"{color: dateActiveColor}\" @tap=\"goToDate()\">回到今天</text>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 日历周数 -->\r\n\t\t<view class=\"calendar_week\">\r\n\t\t\t<view v-for=\"(item, index) in week\" :key=\"index\" class=\"calendar_week__item\">{{ item }}</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 日历轮播 -->\r\n\t\t<view class=\"calendar_swiper\">\r\n\t\t\t<!-- 展开情况下的日历轮播 -->\r\n\t\t\t<swiper\r\n\t\t\t\tv-if=\"swiperMode === 'open'\"\r\n\t\t\t\tkey=\"normalSwiper\"\r\n\t\t\t\tcircular\r\n\t\t\t\t:style=\"{height: swiperHeight('open')}\"\r\n\t\t\t\t:current=\"current\"\r\n\t\t\t\t:duration=\"duration\"\r\n\t\t\t\t:skip-hidden-item-layout=\"true\"\r\n\t\t\t\t@change=\"e => current = e.detail.current\"\r\n\t\t\t>\r\n\t\t\t\t<swiper-item v-for=\"(swiper, swiperIndex) in 3\" :key=\"swiperIndex\" class=\"swiper-item\">\r\n\t\t\t\t\t<DateBox\r\n\t\t\t\t\t\t:dates=\"calendarSwiperDates[swiperIndex]\"\r\n\t\t\t\t\t\t:cellHeight=\"cellHeight\"\r\n\t\t\t\t\t\t:dateActiveColor=\"dateActiveColor\"\r\n\t\t\t\t\t\t:swiperMode=\"swiperMode\"\r\n\t\t\t\t\t\t@chooseDate=\"chooseDate\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</swiper-item>\r\n\t\t\t</swiper>\r\n\t\t\t\r\n\t\t\t<!-- 收缩情况下的日历轮播 -->\r\n\t\t\t<swiper\r\n\t\t\t\tv-else\r\n\t\t\t\tkey=\"shrinkSwiper\"\r\n\t\t\t\tcircular\r\n\t\t\t\t:style=\"{height: swiperHeight('close')}\"\r\n\t\t\t\t:current=\"shrinkCurrent\"\r\n\t\t\t\t:duration=\"duration\"\r\n\t\t\t\t:skip-hidden-item-layout=\"true\"\r\n\t\t\t\t@change=\"e => shrinkCurrent = e.detail.current\"\r\n\t\t\t>\r\n\t\t\t\t<swiper-item v-for=\"(swiper, swiperIndex) in 3\" :key=\"swiperIndex\" class=\"swiper-item\">\r\n\t\t\t\t\t<DateBox\r\n\t\t\t\t\t\t:dates=\"calendarSwiperShrinkDates[swiperIndex]\"\r\n\t\t\t\t\t\t:cellHeight=\"cellHeight\"\r\n\t\t\t\t\t\t:dateActiveColor=\"dateActiveColor\"\r\n\t\t\t\t\t\t:swiperMode=\"swiperMode\"\r\n\t\t\t\t\t\t@chooseDate=\"chooseShrinkDate\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</swiper-item>\r\n\t\t\t</swiper>\r\n\t\t</view>\r\n\t\r\n\t\t<!-- 日历切换模式 -->\r\n\t\t<view class=\"calendar_toggle\" @tap=\"swiperMode = swiperMode === 'open' ? 'close' : 'open'\">\r\n\t\t\t<view class=\"icon\" :class=\"{down: swiperMode === 'close'}\"></view>\r\n\t\t</view>\r\n\t</view>\n</template>\n\n<script>\r\n\timport { parseTime, deepClone } from './js/utils.js'\r\n\timport DateBox from './dateBox.vue'\r\n\texport default {\r\n\t\tname: 'ZsyCalendar',\r\n\t\tcomponents: {\r\n\t\t\tDateBox\r\n\t\t},\r\n\t\tprops: {\r\n\t\t\tduration: { // 轮播图动画时长\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 300\r\n\t\t\t},\r\n\t\t\tcellHeight: { // 一列的高度\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 75\r\n\t\t\t},\r\n\t\t\tdateActiveColor: { // 日期选中颜色\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#FE6601'\r\n\t\t\t},\r\n\t\t\tsundayIndex: { // 星期天所在索引，0表示第一个、6表示最后一个\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 6\r\n\t\t\t},\r\n\t\t\tmode: { // 日历模式\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'open'\r\n\t\t\t},\r\n\t\t\tchangeSetDefault: { // 月份切换时是否显示一号还是当前月份选中高亮\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\tdefaultSelectedDate: { // 默认选中日期\r\n\t\t\t\ttype: String | null,\r\n\t\t\t\tdefault: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttoday: parseTime(new Date(), '{y}-{m}-{d}'), // 今天日期\r\n\t\t\t\tselectedDate: null, // 选中日期\r\n\t\t\t\tweek: [], // 日历周数\r\n\t\t\t\tcurrent: 1, // 当前日历轮播默认显示索引\r\n\t\t\t\tshrinkCurrent: 1, // 缩放日历轮播默认显示索引\r\n\t\t\t\tcalendarSwiperDates: [], // 日历轮播日期信息\r\n\t\t\t\tcalendarSwiperShrinkDates: [], // 日历轮播收缩时的日期信息\r\n\t\t\t\tdateActive: -1, // 日期选中索引\r\n\t\t\t\tswiperByClick: false, // 是否通过点击上月份或下月份的日期进行轮播切换\r\n\t\t\t\tshrinkSwiperByClick: false, // 是否通过点击上月份或下月份的日期进行收缩日历的轮播切换\r\n\t\t\t\tswiperMode: this.mode, // 日历轮播显示模式 open：展开 close：收缩\r\n\t\t\t\tdateCache: {}, // 日期缓存\r\n\t\t\t\temitTimer: null, // 日期改变向父级传递当前选中日期计时器\r\n\t\t\t\tdateClick: false // 是否进行了日期的点击选择\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t/* 获取指定日期信息\r\n\t\t\tisCurDate: 是否获取当天的信息还是选中日期的信息\r\n\t\t\tindex: 0 表示年份 1 表示月份 2 表示日期 */\r\n\t\t\tgetAssignDateInfo() {\r\n\t\t\t\treturn (isCurDate, index) => {\r\n\t\t\t\t\treturn (isCurDate ? this.today : this.selectedDate).split('-')[index] * 1\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 是否显示回到今天按钮\r\n\t\t\tshowBackToTodayBtn() {\r\n\t\t\t\treturn this.getAssignDateInfo(false, 0) !== this.getAssignDateInfo(true, 0) || this.getAssignDateInfo(false, 1) !== this.getAssignDateInfo(true, 1)\r\n\t\t\t},\r\n\t\t\t// 返回轮播图高度\r\n\t\t\tswiperHeight() {\r\n\t\t\t\treturn (swiperMode) => {\r\n\t\t\t\t\tconst normalHeight = (this.calendarSwiperDates[this.current] || []).length / 7 * (this.cellHeight + 20) + 'rpx'\r\n\t\t\t\t\tconst shrinkHeight = this.cellHeight + 20 + 'rpx'\r\n\t\t\t\t\treturn swiperMode === 'open' ? normalHeight : shrinkHeight\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t// 展开日历轮播切换\r\n\t\t\tcurrent(newV, oldV) {\r\n\t\t\t\tif (newV === 0 && oldV === 2) { // 右滑\r\n\t\t\t\t\tthis.swiperChange(1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (newV === 2 && oldV === 0) { // 左滑\r\n\t\t\t\t\tthis.swiperChange(-1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (newV > oldV) { // 右滑\r\n\t\t\t\t\tthis.swiperChange(1)\r\n\t\t\t\t} else { // 左滑\r\n\t\t\t\t\tthis.swiperChange(-1)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 收缩日历轮播切换\r\n\t\t\tshrinkCurrent(newV, oldV) {\r\n\t\t\t\tif (newV === 0 && oldV === 2) { // 右滑\r\n\t\t\t\t\tthis.shrinkSwiperChange(1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (newV === 2 && oldV === 0) { // 左滑\r\n\t\t\t\t\tthis.shrinkSwiperChange(-1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (newV > oldV) { // 右滑\r\n\t\t\t\t\tthis.shrinkSwiperChange(1)\r\n\t\t\t\t} else { // 左滑\r\n\t\t\t\t\tthis.shrinkSwiperChange(-1)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 日历显示方式切换\r\n\t\t\tswiperMode(newV) {\r\n\t\t\t\t// 当收缩时初始化收缩轮播图的日期数据\r\n\t\t\t\tif (newV === 'close') {\r\n\t\t\t\t\tthis.initCalendarShrinkSwiperDates()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselectedDate: {\r\n\t\t\t\tdeep: true,\r\n\t\t\t\thandler(newV, oldV) {\r\n\t\t\t\t\tif (newV && (oldV === null || this.dateClick)) { // 初始化/日历点击选择时直接返回\r\n\t\t\t\t\t\tthis.emitDate()\r\n\t\t\t\t\t\tthis.dateClick = false\r\n\t\t\t\t\t} else { // 其它情况做防抖处理\r\n\t\t\t\t\t\tif (this.emitTimer !== null) {\r\n\t\t\t\t\t\t\tclearTimeout(this.emitTimer)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.emitTimer = setTimeout(() => {\r\n\t\t\t\t\t\t\tthis.emitDate()\r\n\t\t\t\t\t\t}, this.duration + 200)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.init() // 初始化数据\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 初始化数据\r\n\t\t\tinit() {\r\n\t\t\t\tif (this.selectedDate === null) { // 默认选中日期为当天\r\n\t\t\t\t\tthis.selectedDate = this.defaultSelectedDate || this.today\r\n\t\t\t\t}\r\n\t\t\t\tthis.initWeek() // 初始化要显示的周数\r\n\t\t\t\tthis.initCalendarSwiperDates() // 初始化日历轮播日期信息\r\n\t\t\t\t// 解决swiperMode初始化为收缩时没有初始化日历收缩轮播日期信息\r\n\t\t\t\tif (this.swiperMode === 'close') {\r\n\t\t\t\t\tthis.initCalendarShrinkSwiperDates()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 初始化周数\r\n\t\t\tinitWeek() {\r\n\t\t\t\tconst normalWeek = ['日', '一', '二', '三', '四', '五', '六'] // 正常周数\r\n\t\t\t\tconst sIndex = this.sundayIndex < 0 ? 0 : this.sundayIndex >= normalWeek.length ? normalWeek.length - 1 : this.sundayIndex\r\n\t\t\t\tnormalWeek.unshift(...normalWeek.slice(-sIndex))\r\n\t\t\t\tnormalWeek.length = 7\r\n\t\t\t\tthis.week = normalWeek\r\n\t\t\t},\r\n\t\t\t// 初始化展开时的日历轮播日期信息\r\n\t\t\tinitCalendarSwiperDates(cb) {\r\n\t\t\t\tconst year = this.getAssignDateInfo(false, 0)\r\n\t\t\t\tconst month = this.getAssignDateInfo(false, 1)\r\n\t\t\t\tconst cur = this.generateCalendar(year, month)\r\n\t\t\t\tconst prev = this.generateCalendar(month === 1 ? year - 1 : year, month === 1 ? 12 : month - 1)\r\n\t\t\t\tconst next = this.generateCalendar(month === 12 ? year + 1 : year, month === 12 ? 1 : month + 1)\r\n\t\t\t\t// 根据current来判断相邻的轮播存放哪些日历数据\r\n\t\t\t\tif (this.current === 0) {\r\n\t\t\t\t\tthis.calendarSwiperDates = [cur, next, prev]\r\n\t\t\t\t} else if (this.current === 1) {\r\n\t\t\t\t\tthis.calendarSwiperDates = [prev, cur, next]\r\n\t\t\t\t} else if (this.current === 2) {\r\n\t\t\t\t\tthis.calendarSwiperDates = [next, prev, cur]\r\n\t\t\t\t}\r\n\t\t\t\tthis.swiperByClick = false\r\n\t\t\t\t// 初始化日期信息完毕执行回调函数\r\n\t\t\t\tcb && cb()\r\n\t\t\t},\r\n\t\t\t// 生成展开的日历数据\r\n\t\t\tgenerateCalendar(year, month) {\r\n\t\t\t\tlet calendarDate = []\r\n\t\t\t\t// 先获取缓存里面有没有该月的日期数据\r\n\t\t\t\tif (this.dateCache[`${year}-${month}`]) {\r\n\t\t\t\t\tcalendarDate = deepClone(this.dateCache[`${year}-${month}`])\r\n\t\t\t\t} else { // 进行月份日期的计算\r\n\t\t\t\t\tconst monthDates = new Date(year, month, 0).getDate() // 获取此月份总天数\r\n\t\t\t\t\tconst normalWeek = ['一', '二', '三', '四', '五', '六', '日'] // 正常周数\r\n\t\t\t\t\tconst monthFirstDay = normalWeek[new Date(year, month - 1, 0).getDay()] // 获取本月一号为星期几\r\n\t\t\t\t\tconst monthFirstDayIndex = this.week.indexOf(monthFirstDay) // 计算本月一号在日历周数中的索引，索引之前的填充上个月的后几天\r\n\t\t\t\t\t// 本月一号在日历中不是第一个位置，需要进行填充\r\n\t\t\t\t\tif (monthFirstDayIndex !== 0) {\r\n\t\t\t\t\t\tconst prevMonthDates = new Date(year, month - 1, 0).getDate() // 获取上一个月份的总天数\r\n\t\t\t\t\t\t// 填充本月一号之前的数据\r\n\t\t\t\t\t\tfor (let i = 0; i < monthFirstDayIndex; i ++) {\r\n\t\t\t\t\t\t\tconst item = {\r\n\t\t\t\t\t\t\t\tyear: month === 1 ? year - 1 : year,\r\n\t\t\t\t\t\t\t\tmonth: month === 1 ? 12 : month - 1,\r\n\t\t\t\t\t\t\t\tdate: prevMonthDates - i,\r\n\t\t\t\t\t\t\t\ttype: 'prev'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 判断填充的日期是否包含今天日期\r\n\t\t\t\t\t\t\tthis.theDateIsToday(item)\r\n\t\t\t\t\t\t\tcalendarDate.unshift(item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 循环生成当月所有日期\r\n\t\t\t\t\tfor (let i = 1; i <= monthDates; i ++) {\r\n\t\t\t\t\t\tconst item = {\r\n\t\t\t\t\t\t\tyear,\r\n\t\t\t\t\t\t\tmonth,\r\n\t\t\t\t\t\t\tdate: i,\r\n\t\t\t\t\t\t\tisSelected: false,\r\n\t\t\t\t\t\t\tisToday: false,\r\n\t\t\t\t\t\t\ttype: 'cur'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 今天的日期在不在里面\r\n\t\t\t\t\t\tthis.theDateIsToday(item)\r\n\t\t\t\t\t\tcalendarDate.push(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst residue = calendarDate.length % 7\r\n\t\t\t\t\t// 判断是否需要填充下个月的前几天\r\n\t\t\t\t\tif (residue !== 0) {\r\n\t\t\t\t\t\tfor (let i = 1; i <= 7 - residue; i ++) {\r\n\t\t\t\t\t\t\tconst item = {\r\n\t\t\t\t\t\t\t\tyear: month === 12 ? year + 1 : year,\r\n\t\t\t\t\t\t\t\tmonth: month === 12 ? 1 : month + 1,\r\n\t\t\t\t\t\t\t\tdate: i,\r\n\t\t\t\t\t\t\t\ttype: 'next'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 下个月的前几天包含今天\r\n\t\t\t\t\t\t\tthis.theDateIsToday(item)\r\n\t\t\t\t\t\t\tcalendarDate.push(item)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.dateCache[`${year}-${month}`] = deepClone(calendarDate)\r\n\t\t\t\t}\r\n\t\t\t\t// 进行日期的默认选中\r\n\t\t\t\tif (year === this.getAssignDateInfo(false, 0) && month === this.getAssignDateInfo(false, 1)) {\r\n\t\t\t\t\tfor (let i = 0, len = calendarDate.length; i < len; i++) {\r\n\t\t\t\t\t\tif (calendarDate[i].type === 'cur' && calendarDate[i].date === this.getAssignDateInfo(false, 2)) {\r\n\t\t\t\t\t\t\tcalendarDate[i].isSelected = true\r\n\t\t\t\t\t\t\tthis.dateActive = i\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn calendarDate\r\n\t\t\t},\r\n\t\t\t// 判断日期是否为今天\r\n\t\t\ttheDateIsToday(item) {\r\n\t\t\t\tif (item.year + '-' + item.month + '-' + item.date === this.getAssignDateInfo(true, 0) + '-' + this.getAssignDateInfo(true, 1) + '-' + this.getAssignDateInfo(true, 2)) {\r\n\t\t\t\t\titem.isToday = true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 初始化收缩时的日历轮播日期信息\r\n\t\t\tinitCalendarShrinkSwiperDates(swiperChangeType) {\r\n\t\t\t\tlet line = null\r\n\t\t\t\t/**\r\n\t\t\t\t * 日历收缩事件/当前滑动不涉及到到上个/下个月的日期数据\r\n\t\t\t\t * 日历滑动到上一周并且本周不属于第一行并且上一周选中的日期必须是本月份里面的日期\r\n\t\t\t\t * 日历滑动到下一周且本周不属于最后一行\r\n\t\t\t\t */\r\n\t\t\t\tconst curDateLine = Math.floor(this.dateActive / 7)\r\n\t\t\t\tif (!swiperChangeType ||\r\n\t\t\t\t\t\t(swiperChangeType === -1 && curDateLine !== 0 && this.calendarSwiperDates[this.current][(curDateLine - 1) * 7].type === 'cur') ||\r\n\t\t\t\t\t\t(swiperChangeType === 1 && curDateLine + 1 !== this.calendarSwiperDates[this.current].length / 7)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// 计算当前周选中日期处于日历中的哪一行位置\r\n\t\t\t\t\tconst curCalendarSwiperDates = this.calendarSwiperDates[this.current]\r\n\t\t\t\t\tline = Math.floor(curCalendarSwiperDates.map(item => item.type === 'cur' ? item.date : -1).indexOf(this.getAssignDateInfo(false, 2)) / 7)\r\n\t\t\t\t\t// 收缩日历滑动事件需要进行日期的选中处理\r\n\t\t\t\t\tif (swiperChangeType) {\r\n\t\t\t\t\t\t// 将当前选中日期清除选中状态\r\n\t\t\t\t\t\tthis.calendarSwiperDates[this.current][this.dateActive].isSelected = false\r\n\t\t\t\t\t\t// 重新计算日期选中高亮并把下一个日期进行选中\r\n\t\t\t\t\t\tthis.dateActive = line * 7\r\n\t\t\t\t\t\tthis.calendarSwiperDates[this.current][this.dateActive].isSelected = true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // 收缩日历滑动事件\r\n\t\t\t\t\t// 将当前选中日期清除选中状态\r\n\t\t\t\t\tthis.calendarSwiperDates[this.current][this.dateActive].isSelected = false\r\n\t\t\t\t\t// 涉及了上个月/下个月的日期数据，需要重新计算展开日历轮播的日期数据\r\n\t\t\t\t\tlet currentNum = this.current + swiperChangeType\r\n\t\t\t\t\tcurrentNum = currentNum > 2 ? 0 : currentNum < 0 ? 2 : currentNum\r\n\t\t\t\t\tthis.current = currentNum\r\n\t\t\t\t\t// 计算上一周/下一周选中日期处于日历中的哪一行位置\r\n\t\t\t\t\tconst curCalendarSwiperDates = this.calendarSwiperDates[this.current]\r\n\t\t\t\t\tline = Math.floor(curCalendarSwiperDates.map(item => item.type === 'cur' ? item.date : -1).indexOf(this.getAssignDateInfo(false, 2)) / 7)\r\n\t\t\t\t\t// 重新计算日期选中高亮并把下一个日期进行选中\r\n\t\t\t\t\tthis.dateActive = line * 7\r\n\t\t\t\t\tthis.calendarSwiperDates[this.current][this.dateActive].isSelected = true\r\n\t\t\t\t}\r\n\t\t\t\tconst cur = this.generateShrinkCalendar(0, line)\r\n\t\t\t\tconst prev = this.generateShrinkCalendar(-1, line)\r\n\t\t\t\tconst next = this.generateShrinkCalendar(1, line)\r\n\t\t\t\t// 根据shrinkCurrent来判断相邻的轮播存放哪些日历数据\r\n\t\t\t\tif (this.shrinkCurrent === 0) {\r\n\t\t\t\t\tthis.calendarSwiperShrinkDates = [cur, next, prev]\r\n\t\t\t\t} else if (this.shrinkCurrent === 1) {\r\n\t\t\t\t\tthis.calendarSwiperShrinkDates = [prev, cur, next]\r\n\t\t\t\t} else if (this.shrinkCurrent === 2) {\r\n\t\t\t\t\tthis.calendarSwiperShrinkDates = [next, prev, cur]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 生成收缩的日历数据\r\n\t\t\tgenerateShrinkCalendar(type, line) {\r\n\t\t\t\t// 返回当前这一周的日期数据\r\n\t\t\t\tif (type === 0) {\r\n\t\t\t\t\treturn this.calendarSwiperDates[this.current].slice(line * 7, (line + 1) * 7)\r\n\t\t\t\t}\r\n\t\t\t\t// 返回上一周的日期数据\r\n\t\t\t\tif (type === -1) {\r\n\t\t\t\t\t// 当前选中的日期是否位于第一行\r\n\t\t\t\t\tif (line === 0) {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * 当前日历的第一行是否包含有上个月的日期\r\n\t\t\t\t\t\t * 如果有包含，则返回上个月的倒数第二行日期\r\n\t\t\t\t\t\t * 如果没有包含，则返回上个月的倒数第一行日期\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t// 计算上个月的索引值\r\n\t\t\t\t\t\tconst prevIndex = this.current === 0 ? 2 : this.current - 1\r\n\t\t\t\t\t\t// 获取上个月的日期数据\r\n\t\t\t\t\t\tconst prevCalendarSwiperDates = this.calendarSwiperDates[prevIndex]\r\n\t\t\t\t\t\t// 获取上个月的日历行数\r\n\t\t\t\t\t\tconst prevCalendarSwiperDatesLine = prevCalendarSwiperDates.length / 7\r\n\t\t\t\t\t\tif (this.calendarSwiperDates[this.current][0].type === 'prev') { // 倒数第二行\r\n\t\t\t\t\t\t\treturn prevCalendarSwiperDates.slice((prevCalendarSwiperDatesLine - 2) * 7, (prevCalendarSwiperDatesLine - 1) * 7)\r\n\t\t\t\t\t\t} else { // 倒数第一行\r\n\t\t\t\t\t\t\treturn prevCalendarSwiperDates.slice((prevCalendarSwiperDatesLine - 1) * 7)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.calendarSwiperDates[this.current].slice((line - 1) * 7, line * 7)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 返回下一周的日期数据\r\n\t\t\t\tif (type === 1) {\r\n\t\t\t\t\t// 计算当前日历月份总共有多少行\r\n\t\t\t\t\tconst curMonthMaxLine = this.calendarSwiperDates[this.current].length / 7\r\n\t\t\t\t\t// 当前选中的日期是否位于最后一行\r\n\t\t\t\t\tif (line === curMonthMaxLine - 1) {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * 当前日历的最后一行是否包含有下个月的日期\r\n\t\t\t\t\t\t * 如果有包含，则返回下个月的第二行日期\r\n\t\t\t\t\t\t * 如果没有包含，则返回上个月的第一行日期\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t// 计算下个月的索引值\r\n\t\t\t\t\t\tconst nextIndex = this.current === 2 ? 0 : this.current + 1\r\n\t\t\t\t\t\t// 获取下个月的日期数据\r\n\t\t\t\t\t\tconst nextCalendarSwiperDates = this.calendarSwiperDates[nextIndex]\r\n\t\t\t\t\t\t// 获取下个月的日历行数\r\n\t\t\t\t\t\tconst nextCalendarSwiperDatesLine = nextCalendarSwiperDates.length / 7\r\n\t\t\t\t\t\tif (this.calendarSwiperDates[this.current][this.calendarSwiperDates[this.current].length - 1].type === 'next') { // 第二行\r\n\t\t\t\t\t\t\treturn nextCalendarSwiperDates.slice(7, 14)\r\n\t\t\t\t\t\t} else { // 第一行\r\n\t\t\t\t\t\t\treturn nextCalendarSwiperDates.slice(0, 7)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.calendarSwiperDates[this.current].slice((line + 1) * 7, (line + 2) * 7)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 展开日历轮播切换\r\n\t\t\tswiperChange(type) {\r\n\t\t\t\t// 通过点击上个月/下个月日期进行切换，不需要默认选中下个月的一号，直接选中点击的那个日期\r\n\t\t\t\tif (!this.swiperByClick && this.swiperMode === 'open') {\r\n\t\t\t\t\tthis.getPrevOrNextDate(type)\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(() => { // 设置定时器是为了防止轮播切换时生成数据造成页面卡顿\r\n\t\t\t\t\tthis.initCalendarSwiperDates(() => {\r\n\t\t\t\t\t\tthis.swiperMode === 'close' && this.initCalendarShrinkSwiperDates()\r\n\t\t\t\t\t}) // 初始化日历轮播日期信息\r\n\t\t\t\t}, this.swiperMode === 'open' ? this.duration : 0)\r\n\t\t\t},\r\n\t\t\t// 收缩日历轮播切换\r\n\t\t\tshrinkSwiperChange(type) {\r\n\t\t\t\t// 默认选中下个星期的开始日期\r\n\t\t\t\tthis.getPrevOrNextStartDate(type)\r\n\t\t\t\tsetTimeout(() => { // 设置定时器是为了防止轮播切换时生成数据造成页面卡顿\r\n\t\t\t\t\tthis.initCalendarShrinkSwiperDates(type) // 初始化日历轮播日期信息\r\n\t\t\t\t}, this.duration)\r\n\t\t\t},\r\n\t\t\t// 获取上一个月/下一个月的一号日期\r\n\t\t\tgetPrevOrNextDate(type) {\r\n\t\t\t\tconst year = this.getAssignDateInfo(false, 0)\r\n\t\t\t\tlet month = this.getAssignDateInfo(false, 1)\r\n\t\t\t\tmonth = month + type\r\n\t\t\t\t// 判断切换月份时选中当前日期高亮还是一号，若选中当前日期高亮需进行大小判断\r\n\t\t\t\tconst curActiveDate = this.getAssignDateInfo(false, 2)\r\n\t\t\t\tconst maxDate = new Date(year, month, 0).getDate()\r\n\t\t\t\tconst date = this.changeSetDefault ? 1 : curActiveDate > maxDate ? maxDate : curActiveDate\r\n\t\t\t\tthis.selectedDate = parseTime(new Date(year, month - 1, date), '{y}-{m}-{d}')\r\n\t\t\t},\r\n\t\t\t// 获取上个星期/下一星期的开始日期\r\n\t\t\tgetPrevOrNextStartDate(type) {\r\n\t\t\t\tconst date = this.calendarSwiperShrinkDates[this.shrinkCurrent][0]\r\n\t\t\t\tthis.selectedDate = parseTime(new Date(date.year, date.month - 1, date.date), '{y}-{m}-{d}')\r\n\t\t\t},\r\n\t\t\t// 前往某一天 格式 YYYY-MM | YYYY-MM-DD\r\n\t\t\tgoToDate(date = this.today) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (date.split('-').length < 2 || date.split('-').length > 3) throw '参数有误'\r\n\t\t\t\t\tif (date.split('-').length === 2) {\r\n\t\t\t\t\t\tdate += '-01'\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tthrow Error('请检查参数是否符合规范')\r\n\t\t\t\t}\r\n\t\t\t\tthis.selectedDate = date\r\n\t\t\t\tthis.initCalendarSwiperDates(() => {\r\n\t\t\t\t\tthis.initCalendarShrinkSwiperDates()\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 日历轮播展开的情况下选择日期\r\n\t\t\tchooseDate(dateInfo, dateIndex) {\r\n\t\t\t\t// 重复点击后续不做处理\r\n\t\t\t\tif (dateInfo.isSelected) return false\r\n\t\t\t\t// 是否点击了上个月份的后几天或者点击了下个月份的前几天\r\n\t\t\t\tif (dateInfo.type !== 'cur') {\r\n\t\t\t\t\tif (dateInfo.type === 'prev') { // 点击了上个月份的后几天，滑到上个月\r\n\t\t\t\t\t\tthis.current = this.current === 0 ? 2 : this.current - 1\r\n\t\t\t\t\t} else { // 点击了下个月份的前几天，滑到下个月\r\n\t\t\t\t\t\tthis.current = this.current === 2 ? 0 : this.current + 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 将选中日期赋值为当前点击的那个日期\r\n\t\t\t\t\tthis.selectedDate = parseTime(new Date(dateInfo.year, dateInfo.month - 1, dateInfo.date), '{y}-{m}-{d}')\r\n\t\t\t\t\tthis.swiperByClick = true\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t// 将当前选中的日期清空并选中最新的日期\r\n\t\t\t\tthis.calendarSwiperDates[this.current][this.dateActive].isSelected = false\r\n\t\t\t\tthis.dateActive = dateIndex\r\n\t\t\t\tconst date = this.calendarSwiperDates[this.current][this.dateActive]\r\n\t\t\t\tdate.isSelected = true\r\n\t\t\t\tthis.selectedDate = parseTime(new Date(date.year, date.month - 1, date.date), '{y}-{m}-{d}')\r\n\t\t\t\tthis.dateClick = true\r\n\t\t\t},\r\n\t\t\t// 日历轮播收缩的情况下选择日期\r\n\t\t\tchooseShrinkDate(dateInfo, dateIndex) {\r\n\t\t\t\t// 重复点击后续不做处理\r\n\t\t\t\tif (dateInfo.isSelected) return false\r\n\t\t\t\tthis.dateClick = true\r\n\t\t\t\t// 是否点击了上个月份的后几天或者点击了下个月份的前几天\r\n\t\t\t\tif (dateInfo.type !== 'cur') {\r\n\t\t\t\t\tif (dateInfo.type === 'prev') { // 点击了上个月份的后几天，切换到上个月\r\n\t\t\t\t\t\tthis.current = this.current === 0 ? 2 : this.current - 1\r\n\t\t\t\t\t} else { // 点击了下个月份的前几天，切换到下个月\r\n\t\t\t\t\t\tthis.current = this.current === 2 ? 0 : this.current + 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.dateActive = dateIndex\r\n\t\t\t\t\t// 将选中日期赋值为当前点击的那个日期\r\n\t\t\t\t\tthis.selectedDate = parseTime(new Date(dateInfo.year, dateInfo.month - 1, dateInfo.date), '{y}-{m}-{d}')\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t// 计算当前选中日期之前有多少个日期\r\n\t\t\t\tconst dateActiveLine = Math.floor(this.dateActive / 7) * 7\r\n\t\t\t\t// 将当前选中的日期清空并选中最新的日期\r\n\t\t\t\tthis.calendarSwiperDates[this.current][this.dateActive].isSelected = false\r\n\t\t\t\tthis.dateActive = dateIndex + dateActiveLine\r\n\t\t\t\tconst date = this.calendarSwiperDates[this.current][this.dateActive]\r\n\t\t\t\tdate.isSelected = true\r\n\t\t\t\tthis.selectedDate = parseTime(new Date(date.year, date.month - 1, date.date), '{y}-{m}-{d}')\r\n\t\t\t},\r\n\t\t\t// 向父组件传递当前选中数据\r\n\t\t\temitDate() {\r\n\t\t\t\tconst { year, month, date } = this.calendarSwiperDates[this.current][this.dateActive]\r\n\t\t\t\tconst e = {\r\n\t\t\t\t\tselectedDate: this.selectedDate,\r\n\t\t\t\t\tyear,\r\n\t\t\t\t\tmonth,\r\n\t\t\t\t\tdate\r\n\t\t\t\t}\r\n\t\t\t\tthis.$emit('change', e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\n</script>\n\n<style>\r\n\t.zsy_calendar {\r\n\t\twidth: 100%;\r\n\t\tpadding: 20rpx 0;\r\n\t\tbox-sizing: border-box;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 20rpx;\r\n\t}\r\n\t\r\n\t/* 日历顶部信息 */\r\n\t.calendar_info {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tpadding: 0 20rpx;\r\n\t}\r\n\t.calendar_info .title {\r\n\t\tfont-size: 34rpx;\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #2C2C2C;\r\n\t}\r\n\t.calendar_info .desc {\r\n\t\tmargin-left: 29rpx;\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #959595;\r\n\t}\r\n\t.calendar_info .backToToday {\r\n\t\tmargin-left: auto;\r\n\t\tfont-size: 24rpx;\r\n\t}\r\n\t/* 日历顶部信息 */\r\n\t\r\n\t/* 日历周数 */\r\n\t.calendar_week {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t\tfont-size: 26rpx;\r\n\t\tcolor: #959595;\r\n\t\tmargin: 20rpx 0rpx;\r\n\t}\r\n\t.calendar_week .calendar_week__item {\r\n\t\twidth: calc(100% / 7);\r\n\t\ttext-align: center;\r\n\t}\r\n\t/* 日历周数 */\r\n\t\r\n\t/* 日历切换模式 */\r\n\t.calendar_toggle {\r\n\t\tposition: relative;\r\n\t\tpadding: 10rpx 0;\r\n\t\tmargin: 10rpx 20rpx 0;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t}\r\n\t.calendar_toggle .icon {\r\n\t\twidth: 30rpx;\r\n\t\theight: 30rpx;\r\n\t\tbackground-image: url('../../static/zsy-calendar/arrow.png');\r\n\t\tbackground-size: contain;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tmargin: 0 auto;\r\n\t\ttransition: all .3s;\r\n\t}\r\n\t.icon.down {\r\n\t\ttransform: rotate(180deg);\r\n\t}\r\n\t.calendar_toggle::before, .calendar_toggle::after {\r\n\t\twidth: calc(50% - 30rpx);\r\n\t\tborder-top: solid 2rpx #EAEAEA;\r\n\t\tcontent: '';\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t}\r\n\t.calendar_toggle::before {\r\n\t\tleft: 0;\r\n\t}\r\n\t.calendar_toggle::after {\r\n\t\tright: 0;\r\n\t}\r\n\t/* 日历切换模式 */\n</style>\n","import mod from \"-!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./zsy-calendar.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./zsy-calendar.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1673782182907\n      var cssReload = require(\"C:/Users/Jerry/Downloads/HBuilderX.3.6.17.20230112/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}